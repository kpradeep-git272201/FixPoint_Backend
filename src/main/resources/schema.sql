-- ======================
-- Create schema
-- ======================
CREATE SCHEMA IF NOT EXISTS tracker;

-- ======================
-- Create tracker.users
-- ======================
CREATE TABLE IF NOT EXISTS tracker.users (
    id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY (
        INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1
    ),
    designation VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    is_active CHAR(1),
    user_name VARCHAR(255) NOT NULL,
    t_pin INTEGER,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT uk_users_email UNIQUE (email)
);

-- ======================
-- Create tracker.user_roles
-- ======================
CREATE TABLE IF NOT EXISTS tracker.user_roles (
    id BIGSERIAL PRIMARY KEY,
    role_name VARCHAR(50) NOT NULL,
    role_code VARCHAR(20) UNIQUE NOT NULL,
    description VARCHAR(255),
    is_active BOOLEAN DEFAULT TRUE,
    created_by BIGINT,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by BIGINT,
    updated_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Safe seed for user_roles
INSERT INTO tracker.user_roles (role_name, role_code, description, is_active)
VALUES
  ('Admin', 'ROLE_ADMIN', 'System administrator with full access', TRUE),
  ('Manager', 'ROLE_MANAGER', 'Manager with elevated permissions', TRUE),
  ('User', 'ROLE_USER', 'Regular user with limited access', TRUE)
ON CONFLICT (role_code) DO NOTHING;

-- ======================
-- Create tracker.issue_type
-- ======================
CREATE TABLE IF NOT EXISTS tracker.issue_type (
    id BIGSERIAL PRIMARY KEY,
    type_name VARCHAR(50) NOT NULL,
    type_code VARCHAR(20) UNIQUE NOT NULL,
    description VARCHAR(255),
    is_active BOOLEAN DEFAULT TRUE,
    created_by BIGINT,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by BIGINT,
    updated_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Safe seed for issue_type
INSERT INTO tracker.issue_type (type_name, type_code, description)
VALUES
    ('Bug', 'BUG', 'Bug-related issues'),
    ('Issue', 'ISSUE', 'General issue category'),
    ('Feature', 'FEATURE', 'New feature request'),
    ('Enhancement', 'ENHANCEMENT', 'Improvements on existing features')
ON CONFLICT (type_code) DO NOTHING;

-- ======================
-- Create tracker.issue_status
-- ======================
CREATE TABLE IF NOT EXISTS tracker.issue_status (
    id BIGSERIAL PRIMARY KEY,
    status_name VARCHAR(50) NOT NULL,
    status_code VARCHAR(20) UNIQUE NOT NULL,
    description VARCHAR(255),
    is_active BOOLEAN DEFAULT TRUE,
    created_by BIGINT,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by BIGINT,
    updated_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Safe seed for issue_status
INSERT INTO tracker.issue_status (status_name, status_code, description)
VALUES
    ('Pending', 'PENDING', 'Waiting to be processed'),
    ('In Progress', 'IN_PROGRESS', 'Currently being worked on'),
    ('Completed', 'COMPLETED', 'Work finished successfully'),
    ('Rejected', 'REJECTED', 'Issue was rejected'),
    ('Resolved', 'RESOLVED', 'Issue has been resolved')
ON CONFLICT (status_code) DO NOTHING;

-- ======================
-- Create tracker.designation
-- ======================
CREATE TABLE IF NOT EXISTS tracker.designation (
    id BIGSERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    code VARCHAR(20) UNIQUE NOT NULL,
    description VARCHAR(255),
    is_active BOOLEAN DEFAULT TRUE,
    created_by BIGINT,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by BIGINT,
    updated_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Safe seed for designation
INSERT INTO tracker.designation (name, code, description, is_active, created_by, created_date, updated_by, updated_date)
VALUES
  ('Software Engineer', 'SE', 'Handles development tasks', TRUE, 1, CURRENT_TIMESTAMP, 1, CURRENT_TIMESTAMP),
  ('Senior Software Developer', 'SSD', 'Handles complex development tasks and mentorship', TRUE, 1, CURRENT_TIMESTAMP, 1, CURRENT_TIMESTAMP),
  ('Tester', 'QA', 'Performs software testing and QA', TRUE, 1, CURRENT_TIMESTAMP, 1, CURRENT_TIMESTAMP),
  ('UI/UX Designer', 'UIUX', 'Designs user interfaces and user experiences', TRUE, 1, CURRENT_TIMESTAMP, 1, CURRENT_TIMESTAMP),
  ('Business Analyst', 'BA', 'Analyzes business requirements and bridges the gap between business and tech teams', TRUE, 1, CURRENT_TIMESTAMP, 1, CURRENT_TIMESTAMP),
  ('Manager', 'MGR', 'Manages team operations and delivery', TRUE, 1, CURRENT_TIMESTAMP, 1, CURRENT_TIMESTAMP)
ON CONFLICT (code) DO NOTHING;
